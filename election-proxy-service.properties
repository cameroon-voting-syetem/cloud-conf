# Port du serveur
server.port=8079

# Configuration d'Eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.fetch-registry=true

# Activer la découverte automatique des services pour le Gateway
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Configuration de la gestion des endpoints
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health
management.health.circuitbreakers.enabled=true

# Configuration de Resilience4J pour le circuit breaker
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.defaultCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.defaultCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.defaultCircuitBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.defaultCircuitBreaker.waitDurationInOpenState=10000
resilience4j.circuitbreaker.instances.defaultCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.defaultCircuitBreaker.slowCallDurationThreshold=2000
resilience4j.circuitbreaker.instances.defaultCircuitBreaker.slowCallRateThreshold=50

# Ajouter un filtre par défaut pour sécuriser toutes les routes
spring.cloud.gateway.default-filters[0]=JwtAuthenticationFilter

# Ajouter un filtre par défaut pour le circuit breaker
spring.cloud.gateway.default-filters[1]=CircuitBreaker
spring.cloud.gateway.default-filters[1].args.name=defaultCircuitBreaker
spring.cloud.gateway.default-filters[1].args.fallbackUri=forward:/fallback